{"ast":null,"code":"export const getApiUrl = endpoint => {\n  const isDevelopment = process.env.NODE_ENV === 'development';\n  return isDevelopment ? endpoint : `http://localhost:8080${endpoint}`;\n};\nexport const createFetchConfig = (method, body, contentType = 'application/json') => {\n  const config = {\n    method,\n    headers: {\n      'Content-Type': contentType\n    }\n  };\n  if (body) {\n    config.body = contentType === 'application/json' ? JSON.stringify(body) : body;\n  }\n  return config;\n};","map":{"version":3,"names":["getApiUrl","endpoint","isDevelopment","process","env","NODE_ENV","createFetchConfig","method","body","contentType","config","headers","JSON","stringify"],"sources":["C:/Users/Minhen/Downloads/AIAssistant-new/Frontend/src/utils/apiHelpers.js"],"sourcesContent":["export const getApiUrl = (endpoint) => {\r\n    const isDevelopment = process.env.NODE_ENV === 'development';\r\n    return isDevelopment ? endpoint : `http://localhost:8080${endpoint}`;\r\n    };\r\n    \r\n    export const createFetchConfig = (method, body, contentType = 'application/json') => {\r\n    const config = {\r\n        method,\r\n        headers: { 'Content-Type': contentType }\r\n    };\r\n    \r\n    if (body) {\r\n        config.body = contentType === 'application/json' \r\n        ? JSON.stringify(body) \r\n        : body;\r\n    }\r\n    \r\n    return config;\r\n};"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAIC,QAAQ,IAAK;EACnC,MAAMC,aAAa,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa;EAC5D,OAAOH,aAAa,GAAGD,QAAQ,GAAG,wBAAwBA,QAAQ,EAAE;AACpE,CAAC;AAED,OAAO,MAAMK,iBAAiB,GAAGA,CAACC,MAAM,EAAEC,IAAI,EAAEC,WAAW,GAAG,kBAAkB,KAAK;EACrF,MAAMC,MAAM,GAAG;IACXH,MAAM;IACNI,OAAO,EAAE;MAAE,cAAc,EAAEF;IAAY;EAC3C,CAAC;EAED,IAAID,IAAI,EAAE;IACNE,MAAM,CAACF,IAAI,GAAGC,WAAW,KAAK,kBAAkB,GAC9CG,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,GACpBA,IAAI;EACV;EAEA,OAAOE,MAAM;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}