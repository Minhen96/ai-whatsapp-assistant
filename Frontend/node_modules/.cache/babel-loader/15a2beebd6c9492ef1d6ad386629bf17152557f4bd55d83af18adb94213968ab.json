{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minhen\\\\Downloads\\\\AIAssistant-new\\\\Frontend\\\\src\\\\components\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { ArrowLeft, Send, Upload, Loader2 } from 'lucide-react';\nimport { useChat } from '../context/ChatContext';\nimport { useWebSocketSync } from '../hooks/useWebSocketSync';\nimport MessageList from './MessageList';\nimport MessageInput from './MessageInput';\nimport FileUploader from './FileUploader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatInterface({\n  mode,\n  onBack,\n  onConnectionChange\n}) {\n  _s();\n  const {\n    addMessage,\n    setLoading,\n    setConnection\n  } = useChat();\n  const [isUploading, setIsUploading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Initialize WebSocket sync\n  const {\n    isConnected: wsConnected,\n    error: wsError\n  } = useWebSocketSync();\n\n  // Only push a welcome message once per mode\n  useEffect(() => {\n    setConnection(wsConnected);\n    onConnectionChange === null || onConnectionChange === void 0 ? void 0 : onConnectionChange(wsConnected);\n    const hasWelcomedKey = `welcomed-${mode}`;\n    if (sessionStorage.getItem(hasWelcomedKey) !== '1') {\n      addMessage({\n        id: Date.now(),\n        type: 'bot',\n        content: getWelcomeMessage(mode),\n        timestamp: new Date()\n      });\n      sessionStorage.setItem(hasWelcomedKey, '1');\n    }\n    return () => {\n      setConnection(false);\n      onConnectionChange === null || onConnectionChange === void 0 ? void 0 : onConnectionChange(false);\n    };\n  }, [mode, wsConnected, addMessage, setConnection, onConnectionChange]);\n  const getWelcomeMessage = currentMode => {\n    switch (currentMode) {\n      case 'chat':\n        return \"ðŸ¤– Hello! I'm your AI assistant. Ask me anything and I'll help you with intelligent responses.\";\n      case 'store':\n        return \"ðŸ“š Knowledge storage mode activated! Send me text or upload documents to store in your knowledge base.\";\n      case 'whatsapp':\n        return \"ðŸ“± WhatsApp sync mode! Your messages here will be synced with WhatsApp. Start chatting!\";\n      default:\n        return \"Hello! How can I help you today?\";\n    }\n  };\n  const handleSendMessage = async message => {\n    if (!message.trim()) return;\n\n    // Add user message\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: message,\n      timestamp: new Date(),\n      mode\n    };\n    addMessage(userMessage);\n    setLoading(true);\n    try {\n      // Determine endpoint and request configuration based on mode\n      let endpoint, requestInit;\n      if (mode === 'whatsapp') {\n        // Use relative URL to leverage proxy, or absolute if proxy fails\n        endpoint = process.env.NODE_ENV === 'development' ? '/whatsapp/incoming_manual' : 'http://localhost:8080/whatsapp/incoming_manual';\n        requestInit = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: new URLSearchParams({\n            from: 'frontend-user',\n            body: message\n          }).toString()\n        };\n      } else {\n        endpoint = process.env.NODE_ENV === 'development' ? '/chat' : 'http://localhost:8080/chat';\n        requestInit = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            message,\n            mode,\n            userId: 'frontend-user'\n          })\n        };\n      }\n\n      // Make the API call\n      const response = await fetch(endpoint, requestInit);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Backend error:', errorText);\n        throw new Error(`HTTP ${response.status}: ${errorText}`);\n      }\n      const data = await response.json();\n\n      // Add bot response\n      const botMessage = {\n        id: Date.now() + 1,\n        type: 'bot',\n        content: data.response || data.message || 'Sorry, I couldn\\'t process your request.',\n        timestamp: new Date(),\n        mode\n      };\n      addMessage(botMessage);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'bot',\n        content: `Sorry, there was an error: ${error.message}. Please try again.`,\n        timestamp: new Date(),\n        mode\n      };\n      addMessage(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileUpload = async file => {\n    setIsUploading(true);\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('userId', 'frontend-user');\n    try {\n      const response = await fetch('/knowledge/store', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Upload error:', errorText);\n        throw new Error(`HTTP ${response.status}: ${errorText}`);\n      }\n      const data = await response.json();\n      const botMessage = {\n        id: Date.now(),\n        type: 'bot',\n        content: data.message || 'File uploaded successfully!',\n        timestamp: new Date(),\n        mode: 'store'\n      };\n      addMessage(botMessage);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      const errorMessage = {\n        id: Date.now(),\n        type: 'bot',\n        content: `Sorry, there was an error uploading your file: ${error.message}`,\n        timestamp: new Date(),\n        mode: 'store'\n      };\n      addMessage(errorMessage);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const getModeTitle = () => {\n    switch (mode) {\n      case 'chat':\n        return 'Chat with AI';\n      case 'store':\n        return 'Store Knowledge';\n      case 'whatsapp':\n        return 'WhatsApp Sync';\n      default:\n        return 'AI Assistant';\n    }\n  };\n  const getModeIcon = () => {\n    switch (mode) {\n      case 'chat':\n        return 'ðŸ¤–';\n      case 'store':\n        return 'ðŸ“š';\n      case 'whatsapp':\n        return 'ðŸ“±';\n      default:\n        return 'ðŸ¤–';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-[calc(90vh-64px)] bg-white/60\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-3 px-6 py-3 border-b border-white/40 bg-white/60\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"inline-flex items-center justify-center w-9 h-9 rounded-lg bg-gray-100 hover:bg-gray-200 transition\",\n        onClick: onBack,\n        \"aria-label\": \"Go back\",\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          size: 18\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-lg\",\n          children: getModeIcon()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-base font-medium tracking-tight\",\n          children: getModeTitle()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-auto flex items-center gap-2 text-sm text-gray-600\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `inline-block w-2 h-2 rounded-full ${wsConnected ? 'bg-green-500' : 'bg-gray-300'} animate-pulse`,\n          title: wsConnected ? 'Connected to server' : 'Disconnected from server'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), wsConnected ? 'Connected' : 'Disconnected']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4 md:p-6 bg-gray-50/50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-2xl mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(MessageList, {\n          mode: mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-4 md:px-6 py-4 bg-white/70 border-t border-white/40\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-2xl mx-auto space-y-3\",\n        children: [mode === 'store' && /*#__PURE__*/_jsxDEV(FileUploader, {\n          onFileUpload: handleFileUpload,\n          isUploading: isUploading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n          onSendMessage: handleSendMessage,\n          placeholder: getInputPlaceholder(mode)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInterface, \"Ncg2W0tRD7UaOZvmvLxesBmtThM=\", false, function () {\n  return [useChat, useWebSocketSync];\n});\n_c = ChatInterface;\nconst getInputPlaceholder = mode => {\n  switch (mode) {\n    case 'chat':\n      return 'Ask me anything...';\n    case 'store':\n      return 'Type text or upload a file...';\n    case 'whatsapp':\n      return 'Type a message to sync with WhatsApp...';\n    default:\n      return 'Type your message...';\n  }\n};\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ArrowLeft","Send","Upload","Loader2","useChat","useWebSocketSync","MessageList","MessageInput","FileUploader","jsxDEV","_jsxDEV","ChatInterface","mode","onBack","onConnectionChange","_s","addMessage","setLoading","setConnection","isUploading","setIsUploading","messagesEndRef","isConnected","wsConnected","error","wsError","hasWelcomedKey","sessionStorage","getItem","id","Date","now","type","content","getWelcomeMessage","timestamp","setItem","currentMode","handleSendMessage","message","trim","userMessage","endpoint","requestInit","process","env","NODE_ENV","method","headers","body","URLSearchParams","from","toString","JSON","stringify","userId","response","fetch","ok","errorText","text","console","Error","status","data","json","botMessage","errorMessage","handleFileUpload","file","formData","FormData","append","getModeTitle","getModeIcon","className","children","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","title","ref","onFileUpload","onSendMessage","placeholder","getInputPlaceholder","_c","$RefreshReg$"],"sources":["C:/Users/Minhen/Downloads/AIAssistant-new/Frontend/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { ArrowLeft, Send, Upload, Loader2 } from 'lucide-react';\r\nimport { useChat } from '../context/ChatContext';\r\nimport { useWebSocketSync } from '../hooks/useWebSocketSync';\r\nimport MessageList from './MessageList';\r\nimport MessageInput from './MessageInput';\r\nimport FileUploader from './FileUploader';\r\n\r\nfunction ChatInterface({ mode, onBack, onConnectionChange }) {\r\n  const { addMessage, setLoading, setConnection } = useChat();\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  \r\n  // Initialize WebSocket sync\r\n  const { isConnected: wsConnected, error: wsError } = useWebSocketSync();\r\n\r\n  // Only push a welcome message once per mode\r\n  useEffect(() => {\r\n    setConnection(wsConnected);\r\n    onConnectionChange?.(wsConnected);\r\n  \r\n    const hasWelcomedKey = `welcomed-${mode}`;\r\n    if (sessionStorage.getItem(hasWelcomedKey) !== '1') {\r\n      addMessage({\r\n        id: Date.now(),\r\n        type: 'bot',\r\n        content: getWelcomeMessage(mode),\r\n        timestamp: new Date()\r\n      });\r\n      sessionStorage.setItem(hasWelcomedKey, '1');\r\n    }\r\n  \r\n    return () => {\r\n      setConnection(false);\r\n      onConnectionChange?.(false);\r\n    };\r\n  }, [mode, wsConnected, addMessage, setConnection, onConnectionChange]);\r\n\r\n  const getWelcomeMessage = (currentMode) => {\r\n    switch (currentMode) {\r\n      case 'chat':\r\n        return \"ðŸ¤– Hello! I'm your AI assistant. Ask me anything and I'll help you with intelligent responses.\";\r\n      case 'store':\r\n        return \"ðŸ“š Knowledge storage mode activated! Send me text or upload documents to store in your knowledge base.\";\r\n      case 'whatsapp':\r\n        return \"ðŸ“± WhatsApp sync mode! Your messages here will be synced with WhatsApp. Start chatting!\";\r\n      default:\r\n        return \"Hello! How can I help you today?\";\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async (message) => {\r\n    if (!message.trim()) return;\r\n  \r\n    // Add user message\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      type: 'user',\r\n      content: message,\r\n      timestamp: new Date(),\r\n      mode\r\n    };\r\n    addMessage(userMessage);\r\n  \r\n    setLoading(true);\r\n  \r\n    try {\r\n      // Determine endpoint and request configuration based on mode\r\n      let endpoint, requestInit;\r\n      \r\n      if (mode === 'whatsapp') {\r\n        // Use relative URL to leverage proxy, or absolute if proxy fails\r\n        endpoint = process.env.NODE_ENV === 'development' \r\n          ? '/whatsapp/incoming_manual'\r\n          : 'http://localhost:8080/whatsapp/incoming_manual';\r\n        requestInit = {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n          body: new URLSearchParams({ \r\n            from: 'frontend-user', \r\n            body: message \r\n          }).toString()\r\n        };\r\n      } else {\r\n        endpoint = process.env.NODE_ENV === 'development'\r\n          ? '/chat'\r\n          : 'http://localhost:8080/chat';\r\n        requestInit = {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ \r\n            message, \r\n            mode, \r\n            userId: 'frontend-user' \r\n          })\r\n        };\r\n      }\r\n  \r\n      // Make the API call\r\n      const response = await fetch(endpoint, requestInit);\r\n  \r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('Backend error:', errorText);\r\n        throw new Error(`HTTP ${response.status}: ${errorText}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n  \r\n      // Add bot response\r\n      const botMessage = {\r\n        id: Date.now() + 1,\r\n        type: 'bot',\r\n        content: data.response || data.message || 'Sorry, I couldn\\'t process your request.',\r\n        timestamp: new Date(),\r\n        mode\r\n      };\r\n      addMessage(botMessage);\r\n  \r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      const errorMessage = {\r\n        id: Date.now() + 1,\r\n        type: 'bot',\r\n        content: `Sorry, there was an error: ${error.message}. Please try again.`,\r\n        timestamp: new Date(),\r\n        mode\r\n      };\r\n      addMessage(errorMessage);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async (file) => {\r\n    setIsUploading(true);\r\n    \r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('userId', 'frontend-user');\r\n\r\n    try {\r\n      const response = await fetch('/knowledge/store', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('Upload error:', errorText);\r\n        throw new Error(`HTTP ${response.status}: ${errorText}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      const botMessage = {\r\n        id: Date.now(),\r\n        type: 'bot',\r\n        content: data.message || 'File uploaded successfully!',\r\n        timestamp: new Date(),\r\n        mode: 'store'\r\n      };\r\n      addMessage(botMessage);\r\n\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      const errorMessage = {\r\n        id: Date.now(),\r\n        type: 'bot',\r\n        content: `Sorry, there was an error uploading your file: ${error.message}`,\r\n        timestamp: new Date(),\r\n        mode: 'store'\r\n      };\r\n      addMessage(errorMessage);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const getModeTitle = () => {\r\n    switch (mode) {\r\n      case 'chat': return 'Chat with AI';\r\n      case 'store': return 'Store Knowledge';\r\n      case 'whatsapp': return 'WhatsApp Sync';\r\n      default: return 'AI Assistant';\r\n    }\r\n  };\r\n\r\n  const getModeIcon = () => {\r\n    switch (mode) {\r\n      case 'chat': return 'ðŸ¤–';\r\n      case 'store': return 'ðŸ“š';\r\n      case 'whatsapp': return 'ðŸ“±';\r\n      default: return 'ðŸ¤–';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-[calc(90vh-64px)] bg-white/60\">\r\n      <div className=\"flex items-center gap-3 px-6 py-3 border-b border-white/40 bg-white/60\">\r\n        <button \r\n          className=\"inline-flex items-center justify-center w-9 h-9 rounded-lg bg-gray-100 hover:bg-gray-200 transition\" \r\n          onClick={onBack}\r\n          aria-label=\"Go back\"\r\n        >\r\n          <ArrowLeft size={18} />\r\n        </button>\r\n        <div className=\"flex items-center gap-2\">\r\n          <span className=\"text-lg\">{getModeIcon()}</span>\r\n          <h3 className=\"text-base font-medium tracking-tight\">{getModeTitle()}</h3>\r\n        </div>\r\n        <div className=\"ml-auto flex items-center gap-2 text-sm text-gray-600\">\r\n          <span \r\n            className={`inline-block w-2 h-2 rounded-full ${\r\n              wsConnected ? 'bg-green-500' : 'bg-gray-300'\r\n            } animate-pulse`}\r\n            title={wsConnected ? 'Connected to server' : 'Disconnected from server'}\r\n          ></span>\r\n          {wsConnected ? 'Connected' : 'Disconnected'}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex-1 overflow-y-auto p-4 md:p-6 bg-gray-50/50\">\r\n        <div className=\"max-w-2xl mx-auto\">\r\n          <MessageList mode={mode} />\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"px-4 md:px-6 py-4 bg-white/70 border-t border-white/40\">\r\n        <div className=\"max-w-2xl mx-auto space-y-3\">\r\n          {mode === 'store' && (\r\n            <FileUploader onFileUpload={handleFileUpload} isUploading={isUploading} />\r\n          )}\r\n          <MessageInput \r\n            onSendMessage={handleSendMessage} \r\n            placeholder={getInputPlaceholder(mode)} \r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst getInputPlaceholder = (mode) => {\r\n  switch (mode) {\r\n    case 'chat': return 'Ask me anything...';\r\n    case 'store': return 'Type text or upload a file...';\r\n    case 'whatsapp': return 'Type a message to sync with WhatsApp...';\r\n    default: return 'Type your message...';\r\n  }\r\n};\r\n\r\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}