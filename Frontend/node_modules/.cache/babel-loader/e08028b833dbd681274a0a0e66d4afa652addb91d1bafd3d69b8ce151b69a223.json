{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minhen\\\\Downloads\\\\AIAssistant-new\\\\Frontend\\\\src\\\\context\\\\ChatContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContext = /*#__PURE__*/createContext();\nconst initialState = {\n  messages: [],\n  isLoading: false,\n  currentMode: null,\n  userId: null,\n  isConnected: false\n};\nfunction chatReducer(state, action) {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case 'ADD_MESSAGE':\n      return {\n        ...state,\n        messages: [...state.messages, action.payload]\n      };\n    case 'SET_MESSAGES':\n      return {\n        ...state,\n        messages: action.payload\n      };\n    case 'SET_MODE':\n      return {\n        ...state,\n        currentMode: action.payload\n      };\n    case 'SET_USER_ID':\n      return {\n        ...state,\n        userId: action.payload\n      };\n    case 'SET_CONNECTION':\n      return {\n        ...state,\n        isConnected: action.payload\n      };\n    case 'CLEAR_MESSAGES':\n      return {\n        ...state,\n        messages: []\n      };\n    default:\n      return state;\n  }\n}\nexport function ChatProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(chatReducer, initialState);\n\n  // Hydrate from localStorage once\n  useEffect(() => {\n    try {\n      const saved = localStorage.getItem('chat_messages');\n      if (saved) {\n        const parsed = JSON.parse(saved);\n        if (Array.isArray(parsed)) {\n          dispatch({\n            type: 'SET_MESSAGES',\n            payload: parsed\n          });\n        }\n      }\n    } catch {}\n  }, []);\n\n  // Persist messages on change\n  useEffect(() => {\n    try {\n      localStorage.setItem('chat_messages', JSON.stringify(state.messages));\n    } catch {}\n  }, [state.messages]);\n  const addMessage = message => {\n    var _message$id, _message$timestamp;\n    const messageWithDefaults = {\n      id: (_message$id = message.id) !== null && _message$id !== void 0 ? _message$id : Date.now(),\n      timestamp: (_message$timestamp = message.timestamp) !== null && _message$timestamp !== void 0 ? _message$timestamp : new Date(),\n      documents: message.documents || [],\n      // Add documents array\n      hasDocuments: message.hasDocuments || false,\n      // Add flag\n      ...message\n    };\n    dispatch({\n      type: 'ADD_MESSAGE',\n      payload: messageWithDefaults\n    });\n  };\n  const setLoading = loading => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: loading\n    });\n  };\n  const setMode = mode => {\n    dispatch({\n      type: 'SET_MODE',\n      payload: mode\n    });\n  };\n  const setUserId = userId => {\n    dispatch({\n      type: 'SET_USER_ID',\n      payload: userId\n    });\n  };\n  const setConnection = connected => {\n    dispatch({\n      type: 'SET_CONNECTION',\n      payload: connected\n    });\n  };\n  const clearMessages = () => {\n    dispatch({\n      type: 'CLEAR_MESSAGES'\n    });\n  };\n  const value = {\n    ...state,\n    addMessage,\n    setLoading,\n    setMode,\n    setUserId,\n    setConnection,\n    clearMessages\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = ChatProvider;\nexport function useChat() {\n  _s2();\n  const context = useContext(ChatContext);\n  if (!context) {\n    throw new Error('useChat must be used within a ChatProvider');\n  }\n  return context;\n}\n_s2(useChat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","ChatContext","initialState","messages","isLoading","currentMode","userId","isConnected","chatReducer","state","action","type","payload","ChatProvider","children","_s","dispatch","saved","localStorage","getItem","parsed","JSON","parse","Array","isArray","setItem","stringify","addMessage","message","_message$id","_message$timestamp","messageWithDefaults","id","Date","now","timestamp","documents","hasDocuments","setLoading","loading","setMode","mode","setUserId","setConnection","connected","clearMessages","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useChat","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Minhen/Downloads/AIAssistant-new/Frontend/src/context/ChatContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\nconst ChatContext = createContext();\r\n\r\nconst initialState = {\r\n  messages: [],\r\n  isLoading: false,\r\n  currentMode: null,\r\n  userId: null,\r\n  isConnected: false\r\n};\r\n\r\nfunction chatReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SET_LOADING':\r\n      return { ...state, isLoading: action.payload };\r\n    case 'ADD_MESSAGE':\r\n      return { \r\n        ...state, \r\n        messages: [...state.messages, action.payload] \r\n      };\r\n    case 'SET_MESSAGES':\r\n      return { ...state, messages: action.payload };\r\n    case 'SET_MODE':\r\n      return { ...state, currentMode: action.payload };\r\n    case 'SET_USER_ID':\r\n      return { ...state, userId: action.payload };\r\n    case 'SET_CONNECTION':\r\n      return { ...state, isConnected: action.payload };\r\n    case 'CLEAR_MESSAGES':\r\n      return { ...state, messages: [] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function ChatProvider({ children }) {\r\n  const [state, dispatch] = useReducer(chatReducer, initialState);\r\n\r\n  // Hydrate from localStorage once\r\n  useEffect(() => {\r\n    try {\r\n      const saved = localStorage.getItem('chat_messages');\r\n      if (saved) {\r\n        const parsed = JSON.parse(saved);\r\n        if (Array.isArray(parsed)) {\r\n          dispatch({ type: 'SET_MESSAGES', payload: parsed });\r\n        }\r\n      }\r\n    } catch {}\r\n  }, []);\r\n\r\n  // Persist messages on change\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('chat_messages', JSON.stringify(state.messages));\r\n    } catch {}\r\n  }, [state.messages]);\r\n\r\n  const addMessage = (message) => {\r\n    const messageWithDefaults = {\r\n      id: message.id ?? Date.now(),\r\n      timestamp: message.timestamp ?? new Date(),\r\n      documents: message.documents || [], // Add documents array\r\n      hasDocuments: message.hasDocuments || false, // Add flag\r\n      ...message,\r\n    };\r\n    dispatch({ type: 'ADD_MESSAGE', payload: messageWithDefaults });\r\n  };\r\n\r\n  const setLoading = (loading) => {\r\n    dispatch({ type: 'SET_LOADING', payload: loading });\r\n  };\r\n\r\n  const setMode = (mode) => {\r\n    dispatch({ type: 'SET_MODE', payload: mode });\r\n  };\r\n\r\n  const setUserId = (userId) => {\r\n    dispatch({ type: 'SET_USER_ID', payload: userId });\r\n  };\r\n\r\n  const setConnection = (connected) => {\r\n    dispatch({ type: 'SET_CONNECTION', payload: connected });\r\n  };\r\n\r\n  const clearMessages = () => {\r\n    dispatch({ type: 'CLEAR_MESSAGES' });\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    addMessage,\r\n    setLoading,\r\n    setMode,\r\n    setUserId,\r\n    setConnection,\r\n    clearMessages\r\n  };\r\n\r\n  return (\r\n    <ChatContext.Provider value={value}>\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useChat() {\r\n  const context = useContext(ChatContext);\r\n  if (!context) {\r\n    throw new Error('useChat must be used within a ChatProvider');\r\n  }\r\n  return context;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}