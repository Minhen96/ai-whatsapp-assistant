{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nexport const useWebSocket = (url, options = {}) => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [lastMessage, setLastMessage] = useState(null);\n  const [error, setError] = useState(null);\n  const reconnectTimeoutRef = useRef(null);\n  const reconnectAttempts = useRef(0);\n  const maxReconnectAttempts = options.maxReconnectAttempts || 5;\n  const reconnectInterval = options.reconnectInterval || 3000;\n  const connect = () => {\n    try {\n      const ws = new WebSocket(url);\n      ws.onopen = () => {\n        console.log('WebSocket connected');\n        setIsConnected(true);\n        setError(null);\n        reconnectAttempts.current = 0;\n        if (options.onOpen) {\n          options.onOpen();\n        }\n      };\n      ws.onmessage = event => {\n        try {\n          const data = JSON.parse(event.data);\n          setLastMessage(data);\n          if (options.onMessage) {\n            options.onMessage(data);\n          }\n        } catch (err) {\n          console.error('Error parsing WebSocket message:', err);\n          setError('Failed to parse message');\n        }\n      };\n      ws.onclose = event => {\n        console.log('WebSocket disconnected:', event.code, event.reason);\n        setIsConnected(false);\n        if (options.onClose) {\n          options.onClose(event);\n        }\n\n        // Attempt to reconnect if not a manual close\n        if (event.code !== 1000 && reconnectAttempts.current < maxReconnectAttempts) {\n          reconnectAttempts.current++;\n          console.log(`Attempting to reconnect (${reconnectAttempts.current}/${maxReconnectAttempts})...`);\n          reconnectTimeoutRef.current = setTimeout(() => {\n            connect();\n          }, reconnectInterval);\n        }\n      };\n      ws.onerror = error => {\n        console.error('WebSocket error:', error);\n        setError('WebSocket connection error');\n        if (options.onError) {\n          options.onError(error);\n        }\n      };\n      setSocket(ws);\n    } catch (err) {\n      console.error('Failed to create WebSocket connection:', err);\n      setError('Failed to create WebSocket connection');\n    }\n  };\n  const disconnect = () => {\n    if (reconnectTimeoutRef.current) {\n      clearTimeout(reconnectTimeoutRef.current);\n    }\n    if (socket) {\n      socket.close(1000, 'Manual disconnect');\n      setSocket(null);\n    }\n    setIsConnected(false);\n  };\n  const sendMessage = message => {\n    if (socket && isConnected) {\n      try {\n        const messageStr = typeof message === 'string' ? message : JSON.stringify(message);\n        socket.send(messageStr);\n        return true;\n      } catch (err) {\n        console.error('Error sending WebSocket message:', err);\n        setError('Failed to send message');\n        return false;\n      }\n    } else {\n      console.warn('WebSocket not connected');\n      setError('WebSocket not connected');\n      return false;\n    }\n  };\n  useEffect(() => {\n    if (url) {\n      connect();\n    }\n    return () => {\n      disconnect();\n    };\n  }, [url]);\n  return {\n    socket,\n    isConnected,\n    lastMessage,\n    error,\n    sendMessage,\n    connect,\n    disconnect\n  };\n};\n_s(useWebSocket, \"VNTMKO88z5mvKEhhBQzRs1GLvR8=\");","map":{"version":3,"names":["useEffect","useRef","useState","useWebSocket","url","options","_s","socket","setSocket","isConnected","setIsConnected","lastMessage","setLastMessage","error","setError","reconnectTimeoutRef","reconnectAttempts","maxReconnectAttempts","reconnectInterval","connect","ws","WebSocket","onopen","console","log","current","onOpen","onmessage","event","data","JSON","parse","onMessage","err","onclose","code","reason","onClose","setTimeout","onerror","onError","disconnect","clearTimeout","close","sendMessage","message","messageStr","stringify","send","warn"],"sources":["C:/Users/Minhen/Downloads/AIAssistant-new/Frontend/src/hooks/useWebSocket.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\n\r\nexport const useWebSocket = (url, options = {}) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [lastMessage, setLastMessage] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const reconnectTimeoutRef = useRef(null);\r\n  const reconnectAttempts = useRef(0);\r\n  const maxReconnectAttempts = options.maxReconnectAttempts || 5;\r\n  const reconnectInterval = options.reconnectInterval || 3000;\r\n\r\n  const connect = () => {\r\n    try {\r\n      const ws = new WebSocket(url);\r\n      \r\n      ws.onopen = () => {\r\n        console.log('WebSocket connected');\r\n        setIsConnected(true);\r\n        setError(null);\r\n        reconnectAttempts.current = 0;\r\n        \r\n        if (options.onOpen) {\r\n          options.onOpen();\r\n        }\r\n      };\r\n\r\n      ws.onmessage = (event) => {\r\n        try {\r\n          const data = JSON.parse(event.data);\r\n          setLastMessage(data);\r\n          \r\n          if (options.onMessage) {\r\n            options.onMessage(data);\r\n          }\r\n        } catch (err) {\r\n          console.error('Error parsing WebSocket message:', err);\r\n          setError('Failed to parse message');\r\n        }\r\n      };\r\n\r\n      ws.onclose = (event) => {\r\n        console.log('WebSocket disconnected:', event.code, event.reason);\r\n        setIsConnected(false);\r\n        \r\n        if (options.onClose) {\r\n          options.onClose(event);\r\n        }\r\n\r\n        // Attempt to reconnect if not a manual close\r\n        if (event.code !== 1000 && reconnectAttempts.current < maxReconnectAttempts) {\r\n          reconnectAttempts.current++;\r\n          console.log(`Attempting to reconnect (${reconnectAttempts.current}/${maxReconnectAttempts})...`);\r\n          \r\n          reconnectTimeoutRef.current = setTimeout(() => {\r\n            connect();\r\n          }, reconnectInterval);\r\n        }\r\n      };\r\n\r\n      ws.onerror = (error) => {\r\n        console.error('WebSocket error:', error);\r\n        setError('WebSocket connection error');\r\n        \r\n        if (options.onError) {\r\n          options.onError(error);\r\n        }\r\n      };\r\n\r\n      setSocket(ws);\r\n    } catch (err) {\r\n      console.error('Failed to create WebSocket connection:', err);\r\n      setError('Failed to create WebSocket connection');\r\n    }\r\n  };\r\n\r\n  const disconnect = () => {\r\n    if (reconnectTimeoutRef.current) {\r\n      clearTimeout(reconnectTimeoutRef.current);\r\n    }\r\n    \r\n    if (socket) {\r\n      socket.close(1000, 'Manual disconnect');\r\n      setSocket(null);\r\n    }\r\n    \r\n    setIsConnected(false);\r\n  };\r\n\r\n  const sendMessage = (message) => {\r\n    if (socket && isConnected) {\r\n      try {\r\n        const messageStr = typeof message === 'string' ? message : JSON.stringify(message);\r\n        socket.send(messageStr);\r\n        return true;\r\n      } catch (err) {\r\n        console.error('Error sending WebSocket message:', err);\r\n        setError('Failed to send message');\r\n        return false;\r\n      }\r\n    } else {\r\n      console.warn('WebSocket not connected');\r\n      setError('WebSocket not connected');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      connect();\r\n    }\r\n\r\n    return () => {\r\n      disconnect();\r\n    };\r\n  }, [url]);\r\n\r\n  return {\r\n    socket,\r\n    isConnected,\r\n    lastMessage,\r\n    error,\r\n    sendMessage,\r\n    connect,\r\n    disconnect\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}